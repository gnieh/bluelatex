http {

  # the port the http server listens to
  port = 8080

  host = localhost

}

recaptcha {
  # no ReCaptcha key by default
  # the private key
  # private-key = "my super private key"
  # the public key (for clients)
  # public-key = "my awesome public key"
}

blue {

  # the base URL hosting the \BlueLaTeX service
  base-url = "http://"${http.host}":"${http.port}

  # the kind of registration confirmation process, one of:
  #  - `email-confirmation` set a default password and send a confirmation email
  #    asking the newly registered user to set a new password
  #  - `email-summary` the user chooses his password upon registration and
  #    then receives an information email with summary of registration
  #   `no-email` the user chooses his password upon registration and receives no
  #   email
  registration-confirmation = "email-summary"

  # the base directory where the working data are saved
  data = "/var/lib/blue"

  # the session timeout
  session-timeout = 15 minutes

  paper {

    # the directory where the paper data are saved
    directory = ${blue.data}/papers

    # the directory containing the cls files
    classes = ${blue.data}/classes

  }

  template {

    # the base directory where the templates are located
    directory = ${blue.data}/templates

  }

  # Rest API specific configuration keys
  api {

    # the prefix of this \BlueLaTeX installation
    # if it is installed at the root of the domain, then leave this string empty
    # if the prefix is absolute (i.e. starting with a `/`) then the API is expected to
    # be at the root of the virtual host.
    # if the path is relative (i.e. not starting with `/`) then the client
    # is expected to send its requests by appending its own prefix to the API prefix if it has any.
    path-prefix = "api"

  }

  # All configuration keys related to the permission model
  # There are 5 predefined roles in \BlueLaTeX:
  #  - Author
  #  - Reviewer
  #  - Guest
  #  - Other
  #  - Anonymous
  # However permissions assigned to each role can be tuned for each paper.
  # The list of valid permissions is:
  #  - `edit` allows for collaboratively editing the paper,
  #  - `delete` allows for deleting a paper,
  #  - `compile` allows for compiling the paper,
  #  - `configure` allows for configuring the paper settings like compiler settings for example (if any),
  #  - `publish` allows for using the publication feature (like creating a tag or sending to arXive),
  #  - `download` allows for downloading the source files of the paper,
  #  - `read` allows for reading the paper source but not for editing it,
  #  - `view` allows for viewing the rendered paper but not the source,
  #  - `comment` allows for commenting on a paper (either the rendered view or the source),
  #  - `chat` allows for interacting with other connected users in the chat,
  #  - `fork` allows for creating a derivative of this paper,
  #  - `change-phase` allows for changing the current phase of the paper.
  #  - any other string is a custom permission that can be used in any module
  permissions {

    # Defines the basic permissions to assign to a private paper, this can be changed later
    # in any existing paper. If no permission entity exists, these permission will be
    # taken whenever a permission check is performed.
    private {
      # authors can do anything
      author = [ edit, delete, compile, configure, publish, download, read, view, comment, chat, fork, change-phase ]
      # reviewers may read and comment
      reviewer = [ compile, view, comment ]
      # guests may only read
      guest = [ compile, view ]
      # other people cannot do anything
      other = []
      # anonymous people cannot do anything either
      anonymous = []
    }

    # Defines the basic permissions to assign to a public paper, this can be changed later
    # in any existing paper. If no permission entity exists, these permission will be
    # taken whenever a permission check is performed.
    public {
      # authors, reviewers, guest, other and anonymous can do anything
      author = [ edit, delete, compile, configure, publish, download, read, view, comment, chat, fork, change-phase ]
      reviewer = ${blue.permissions.public.author}
      guest = ${blue.permissions.public.author}
      other = ${blue.permissions.public.author}
      anonymous = ${blue.permissions.public.author}
    }

    # You may add any default built-in permission set here.
    # Any missing role is interpreted as the empty list of permissions
    # e.g.
    # my-useless-permissions {
    #   author = []
    #   reviewer = []
    #   guest = []
    #   other = []
    #   anonymous = []
    # }

  }

}

# The email configuration. For possible configuration keys,
# see https://javamail.java.net/nonav/docs/api/
mail {

  smtp {

    # the smtp server host name
    host = localhost

    # the smtp server port
    port = 25

    # additional configuration keys specific to \BlueLaTeX
    # when a user and a password are required by the smtp server
    # user = username
    # password = my_password

  }

  # the address from which users receive emails
  from = "no-reply@bluelatex.gnieh.org"

}

couch {

  # the host name where the couchdb instance runs
  hostname = "localhost"

  # the couchdb server port
  port = 5984

  # should we connect to couchdb via ssl
  ssl = false

  # the timeout when waiting for the server response
  timeout = 20 seconds

  # the couchdb database administrator name
  admin-name = "admin"

  # the couchdb database administrator password
  admin-password = "admin"

  database {

    # the name of the database in which the \BlueLaTeX specific user data are saved
    blue_users = "blue_users"

    # the name of the database in which the papers data are saved
    blue_papers = "blue_papers"

  }

  design {

    # the directory containing the design documents
    dir = ${blue.data}/designs

  }

  # user specific configuration
  user {

    # the default roles assigned to a user when created */
    roles = [ "blue_user" ]

    # the password reset token validity
    token-validity = 1 day

  }

}

