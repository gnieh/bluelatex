/*
 * This file is part of the \BlueLaTeX project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package gnieh.blue
package compile
package impl

import http._
import common._

import tiscaf._

import scala.util.Try

import com.typesafe.config.Config

import gnieh.sohva.control.CouchClient

/** Cleans the working directory by deleting all files generated by the latex compiler
 *  and/or bibtex.
 *
 *  @author Lucas Satabin
 */
class CleanLet(paperId: String, val couch: CouchClient, config: Config, logger: Logger) extends SyncRoleLet(paperId, config, logger) {

  def roleAct(user: UserInfo, role: PaperRole)(implicit talk: HTalk): Try[Any] = role match {
    case Author =>

      import FileUtils._

      Try {
        // delete all temporary files
        val paperDir = configuration.buildDir(paperId)
        val ok = paperDir.filter(_.isTeXTemporary).foldLeft(true) { (acc, tmp) =>
          tmp.delete && acc
        }
        // and send answer back
        talk.writeJson(ok)
      }

    case _ =>
      Try(
        talk
          .setStatus(HStatus.Forbidden)
          .writeJson(ErrorResponse("no_sufficient_rights", "Only authors may clean compilation results")))

  }

}

